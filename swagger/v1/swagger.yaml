openapi: 3.0.1
info:
  title: Rent-a-Car API
  version: v1
paths:
  /api/v1/cars:
    get:
      summary: Retrieve all cars
      responses:
        '200':
          description: A list of cars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
    post:
      summary: Create a new car
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCar'
      responses:
        '201':
          description: Car created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '422':
          description: Failed to create car
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/cars/{id}:
    get:
      summary: Retrieve a specific car by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the car to retrieve
      responses:
        '200':
          description: Car details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '404':
          description: Car not found

    delete:
      summary: Delete a car by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the car to delete
      responses:
        '204':
          description: Car deleted successfully
        '422':
          description: Failed to delete car
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/reservations:
    get:
      summary: Retrieve all reservations
      responses:
        '200':
          description: A list of reservations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'

    post:
      summary: Create a new reservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReservation'
      responses:
        '201':
          description: Reservation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '422':
          description: Failed to create reservation
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/reservations/{id}:
    get:
      summary: Retrieve a specific reservation by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the reservation to retrieve
      responses:
        '200':
          description: Reservation details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '404':
          description: Reservation not found

    put:
      summary: Update a reservation by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the reservation to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReservation'
      responses:
        '200':
          description: Reservation updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '422':
          description: Failed to update reservation
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      summary: Delete a reservation by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the reservation to delete
      responses:
        '204':
          description: Reservation deleted successfully
        '422':
          description: Failed to delete reservation
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

components:
  schemas:
    Car:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        photo:
          type: string
        details:
          type: string
        city:
          type: string
        model:
          type: string
        cost:
          type: number
        reserved:
          type: boolean
        user_id:
          type: integer
          format: int64

    NewCar:
      type: object
      properties:
        name:
          type: string
        photo:
          type: string
        details:
          type: string
        city:
          type: string
        model:
          type: string
        cost:
          type: number
        reserved:
          type: boolean
        user_id:
          type: integer
          format: int64

    Reservation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        reserved_date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        total_cost:
          type: number
        start_location:
          type: string
        destination:
          type: string
        user_id:
          type: integer
          format: int64
        car_id:
          type: integer
          format: int64
        name:
          type: string

    NewReservation:
      type: object
      properties:
        reserved_date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        total_cost:
          type: number
        start_location:
          type: string
        destination:
          type: string
        user_id:
          type: integer
          format: int64
        car_id:
          type: integer
          format: int64
        name:
          type: string
